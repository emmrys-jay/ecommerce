{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a RESTful personal finance API written in Go using go-chi, PostgreSQL database, and Redis cache.",
        "title": "Savely (Smart Personal Finance Manager) API",
        "contact": {
            "name": "Emmanuel Jonathan",
            "url": "https://github.com/emmrys-jay/savely",
            "email": "jonathanemma121@gmail.com"
        },
        "version": "1.0"
    },
    "host": "http://localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/": {
            "get": {
                "description": "check server status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "Check server status",
                "responses": {
                    "200": {
                        "description": "Ping created",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create a new ping object with name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "Create a new ping object",
                "parameters": [
                    {
                        "description": "Create ping request",
                        "name": "ping.PingPostDTO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Ping"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ping created",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Ping": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "http.errorResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Error message 1",
                        " Error message 2"
                    ]
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "http.response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Success"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and the access token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}